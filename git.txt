git commands

To check the version or to check git is installed: git -v // git --version

To config your git to work with yor name and email
git config --global user.name "your name"
git config --global user.email "your email"

To initialise a folder to git: git init

To change the name of master branch to main: git branch -M main

To clone a repo: git clone " link of the repo "

To get the status of the repo: git status

types of status:
	untracked: when you create a new file
	modified: when you modify a existing file
	staged: when it is added after modified
	unmodified: not modified

To add new or changed files in working directory to the Git staging area: git add <filenames with space>
	git add . ( add all )

To commit the changed in the local branch: git commit -m ""

To remove the folder form the staged state: git remove --staged <filename>

To see all the commit done: git log

To go to the previous state of the folder before commiting something: git checkout <commit id>
	the head position changes to the previos state from the recent commit

To go back to the commited state: git checkout main

To delete to changes which are made while you were in the previous state: git checkout -f main

To link the local repo to the remote origin: git remote add origin(can be any other name) <repo link>

To push the local commits to github: git push -u origin main



To undo the commit, get the commit id and write the cmd: git reset < commit id >

When you do't want to commit the file but save it somewhere to use it later, every file which are in the staged state will be stashed: git stash

------------------------- Branching -------------------------

To create a branch: git branch <branchname>

To move the head to the branch: git checkout <branchname>

To create and move to the branch(combination of above 2): git checkout -b <branchname>

While creating a branch make sure to move the head to main branch i.e. main by using the checkout or use: git branch <newBanchName> <sourceBranchName>

To list all branches and see which branch you are currently on: git branch
	The current branch will be highlighted with an asterisk (*).

To pull changes from the main branch into your current branch (branch1), you can use the following commands:
	1. Fetch the latest changes from the remote repository: git fetch origin
	2. Merge the main branch into your current branch (branch1): git merge origin/main

	3. Alternatively, you can use a single command to pull and merge the changes: git pull origin main
